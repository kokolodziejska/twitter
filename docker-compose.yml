services:
  db:
    image: postgres:17
    container_name: twitter-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: foka
      POSTGRES_DB: twitter
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - twitter-network

  backend:
    build:
      context: ./backend
    container_name: twitter-backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql+asyncpg://postgres:foka@db:5432/twitter
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    networks:
      - twitter-network

  frontend:
    build:
      context: ./frontend
    container_name: twitter-frontend
    ports:
    - "3000:80"
    networks:
      - twitter-network

  nginx:
    image: nginx:latest
    container_name: twitter-nginx
    volumes:
      - C:/nginx/ssl:/etc/nginx/ssl:ro 
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Główna konfiguracja
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro  # Konfiguracja serwera
      - ./frontend/build:/usr/share/nginx/html:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - twitter-network

volumes:
  postgres_data:

networks:
  twitter-network:
    driver: bridge
